datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int              @id @default(autoincrement())
  oauthProvider    String           // e.g. "google", "github", "facebook", etc.
  oauthProviderId  String?          // The unique ID for the user in the OAuth provider
  email            String           @unique
  password         String?          // Only for email users.
  firstName        String?
  lastName         String?
  avatarUrl        String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  permissions      Permission[]     // Relationship to Permission model

  @@unique([oauthProvider, oauthProviderId]) // Zorgt ervoor dat een gebruiker uniek is per provider
  @@index([email])
}



model Freelancer {
  id               Int              @id @default(autoincrement())
  oauthProvider    String           // e.g. "google", "github", "facebook", etc.
  oauthProviderId  String           // The unique ID for the user in the OAuth provider
  email            String           @unique
  firstName        String?
  lastName         String?
  avatarUrl        String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  @@index([email])
}


model Client {
  id               Int              @id @default(autoincrement())
  oauthProvider    String           // e.g. "google", "github", "facebook", etc.
  oauthProviderId  String           // The unique ID for the user in the OAuth provider
  email            String           @unique
  firstName        String?
  lastName         String?
  avatarUrl        String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  @@index([email])
}



model Permission {
  id         Int      @id @default(autoincrement())
  name       String   // The name of the permission (e.g., "ticket.view")
  userId     Int      // Foreign key to associate the permission with the user
  user       User     @relation(fields: [userId], references: [id])
}

enum OAuthProvider {
  google
  github
  facebook
  twitter
  linkedin
}